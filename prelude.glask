module Main where
{ 
  class Num a

; instance Num Int
; instance Num Double


; class Fractional a

; instance Fractional Double



-- ; class Bar b

; class () => Foo a where
  { foo :: a -> b -> a
  -- ; foo x y = x
  }

-- ; instance (Show a) => Baz ([] a) where
-- { baz = 23 :: a }
  
-- ; type Foo = Int -- Type Aliases/Synonym expansion is not implemented yet
  
; int = 23 -- I have fixed the bug manifesting for this declaration
; double = 23.7

; expl :: Double
; expl = 23

}
